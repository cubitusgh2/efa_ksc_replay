# To use this in your application, make sure that this properties file
# is included in your application JAR (e.g. in package `com.myapp.themes`)
# and invoke `FlatLaf.registerCustomDefaultsSource( "com.myapp.themes" );`
# before setting the look and feel.
# https://www.formdev.com/flatlaf/how-to-customize/#application_properties

#Sorry, no font setting here. Default font gets set in 
#de.nmichael.efa.util.Dialog.setGlobalFontSize(int, int)
#de.nmichael.efa.util.Dialog.setGlobalTableFontSize(int)

# Font gets configured in efaConfig. Setting default font to "Dialog" does not hurt.
# Otherwise, flatlaf looks for the system it is running on and uses a specific font, 
# e.g. Segoe UI on Windows.
defaultFont = Dialog
#defaultFont = 25 "Dialog" 

#These basic colors can be customized in efaConfig.
#All other colors in the LAF are derived from these basic colors.
#Whole themes of the FlatLaf can be set by changing these standard colors. 
#@background=#f5f4f2
@background=#EFEDE8
@accentBaseColor=#2675bf
@accentBase2Color=lighten(saturate(@accentBaseColor,10%),6%)
@efaFocusColor=#FF9900
@efaTableHeaderBackground=lighten(@accentBase2Color,35%)
@efaTableHeaderForeground=#000000
@efaTableAlternateRowColor=lighten(@accentBase2Color,41%)
@efaToolTipBorderColor=darken(@accentBaseColor,25%)

@disabledBackground = lighten(@background,5%, autoInverse)
@buttonBackground = lighten(@background,20%,autoInverse)
@componentBackground = lighten(@background,20%,autoInverse)
@menuBackground = lighten(@background,20%,autoInverse)

#More prominent borders for Buttons, Text fields, List items. darken by 20% seems to be default
Component.borderColor=darken(@background, 23%)

#Rounded corners for default controls
#Not applicable for JList, JTree, JTextArea, JTables
@StandardArc = 8
@InnerArc = 5

Button.arc = @StandardArc
Component.arc = @StandardArc
TextComponent.arc = @StandardArc
ProgressBar.arc = @StandardArc
List.selectionArc = @InnerArc
Tree.selectionArc = @InnerArc
ComboBox.selectionArc = @InnerArc
ToolTip.borderCornerRadius = @StandardArc	
ScrollBar.thumbArc = @InnerArc
ScrollBar.trackArc = @InnerArc
FlatButtonBorder.arc=@StandardArc
TabbedPane.tabArc = @InnerArc
TabbedPane.tabSelectionArc =0 
TabbedPane.buttonArc = @StandardArc
Progressbar.arc= @InnerArc
CheckBox.arc = @InnerArc

# Noticable triangles for up/down buttons
Component.arrowType = triangle
TabbedPane.arrowType = triangle
RadioButton.icon.centerDiameter = 8

# Buttons and textfields shall leave more space to the text above and below
Button.margin = 3,4,3,4
TextField.margin = 2,4,2,4

#Scroll bar shall not be too narrow, bad for touch-like interfaces
ScrollBar.minimumThumbSize = 16,16	
ScrollBar.minimumButtonSize = 16,16
ScrollBar.width = 12

# Focus
Component.focusWidth = 1
Component.focusColor =  @efaFocusColor
Component.hideMnemonics = false
Button.borderWidth = 1

#HighContrast
ScrollBar.track = darken(@background,6%)
ScrollBar.trackHighlight = #ffffff
ScrollBar.showButtons = true	
#AccentBaseColor too dominant for scrollbar thumb
ScrollBar.thumb =  lighten(@accentBaseColor,20%)

ProgressBar.selectionBackground =  lighten(@accentBaseColor,25%)
ProgressBar.background =  darken(@background,10%)

Button.default.background = @accentSelectionBackground
Button.default.foreground = #FFFFFF
Button.default.boldText = true
Button.font = +bold
ToggleButton.background = lighten(@background,4%)
ToggleButton.hoverForeground = #000000
ToggleButton.hoverBackground = darken(@background,10%)
ToggleButton.selectedBackground = lighten(@accentBase2Color,25%)
ToggleButton.selectedForeground = #000000
#ToggleButton.toolbar.hoverBackground = darken(@background,10%)
ToggleButton.font = +bold
ToolBar.background = lighten(@background,10%)
ToolBar.focusableButtons = true
ToolBar.hoverButtonGroupBackground = lighten(@background, 2%)


CheckBox.icon.selectedBackground = @accentSelectionBackground
CheckBox.icon.checkmarkColor = #ffffff
CheckBox.icon.disabledSelectedBackground = @accentSelectionBackground
CheckBox.icon.disabledCheckmarkColor = #ffffff
#a dark background for an empty checkbox or dadiobutton is good for recognition
#that there is a checkbox available - it is just more noticable than in standard background color. 
CheckBox.icon.background = darken(@background,20%)
CheckBox.icon.selectedBorderWidth = 0
CheckBox.icon.borderWidth = 0

# Default Background darker, as Tabbedpane draws no border
TabbedPane.background = darken(@background,10%)
#dark blue background for selected element, opacque=filled
TabbedPane.tabsOpaque = true
TabbedPane.tabsOverlapBorder = true
TabbedPane.contentOpaque = true
TabbedPane.selectedBackground = @accentSelectionBackground
TabbedPane.selectedForeground = #FFFFFF
TabbedPane.hoverColor = lighten(@accentBase2Color,20%)
#focused, not selected
TabbedPane.focusColor = @accentSelectionBackground
#lighten(@accentBase2Color,15%)
TabbedPane.focusForeground = #ffffff
#Border between tabs and also around the whole tabbedpane
TabbedPane.hasFullBorder = true
TabbedPane.contentAreaColor = @accentBase2Color
# Draw as tabs like in MetalLaf
TabbedPane.showTabSeparators = true	
TabbedPane.tabSeparatorsFullHeight = false
#Draw Tab line above instad of on bottom of tab
TabbedPane.tabType = card
TabbedPane.cardTabArc = 12
TabbedPane.tabArc = 12
TabbedPane.inactiveUnderlineColor = lighten(@accentBase2Color,20%)
TabbedPane.underlineColor = @efaFocusColor
#TabbedPane.hiddenTabsNavigation = false
TabbedPane.tabHeight=12
TabbedPane.font = +bold

List.selectionBackground = @accentBaseColor
List.selectionForeground = #FFFFFF
List.selectionInactiveBackground = lighten(@accentBaseColor,25%)
Tree.selectionBackground = @accentBaseColor
Tree.selectionForeground = #FFFFFF
Tree.selectionInactiveBackground = lighten(@accentBaseColor,25%)

Table.sortIconColor = darken(@accentBaseColor,20%)
Table.selectionInactiveBackground = lighten(@accentBaseColor,25%)
#TableHeader.background = darken(@background,10%)
TableHeader.background = @efaTableHeaderBackground
TableHeader.foreground = @efaTableHeaderForeground
TableHeader.font = +bold
TableHeader.separatorColor = darken($TableHeader.background,50%)
# This leads to more accurate table header heights with alternate font sizes.
# however, this is same as TabbedPane.tabHeight. 
# Value is independent from tableheader font size, tableheader increases when font size increases.
TableHeader.height = 12
#This is overwritten by efa's own table renderer
#Table.alternateRowColor = @efaTableAlternateRowColor

#This color is overwritten by efaConfig
ToolTip.background = lighten(@accentBaseColor,50%)
ToolTip.foreground = darken(@accentBaseColor,20%)
ToolTip.border = 2,2,2,2,lighten(@efaToolTipBorderColor,10%)

